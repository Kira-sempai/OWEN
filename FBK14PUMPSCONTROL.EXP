
(* @NESTEDCOMMENTS := 'Yes' *)
(* @PATH := '\/K14' *)
(* @OBJECTFLAGS := '0, 8' *)
(* @SYMFILEFLAGS := '2048' *)
FUNCTION_BLOCK fbK14PumpsControl
(*
	3. Управление насосами К14
	контура отопления и вентиляции
*)
VAR CONSTANT
	PumpCheckDelayTime : TIME := T#2s;
	PumpWorkSummerOrder : ARRAY [1..MAX_K14_PUMPS_NUM] OF USINT := 3, 1, 2;
	PumpWorkHeatingOrder : ARRAY [1..MAX_K14_PUMPS_NUM] OF USINT := 1, 2, 3;
END_VAR


VAR_INPUT
	ManualMode: BOOL;						(*Ручной режим?*)
	WorkAllowed: BOOL;					(*Работа разрешена?*)
	SummerMode: BOOL;						(*Летний режим?*)
	TurnOnPumpButtonPressed: ARRAY [1..MAX_K14_PUMPS_NUM] OF BOOL;	(*Нажата кнопка "Пуск насоса"?*)
	TurnOffPumpButtonPressed: ARRAY [1..MAX_K14_PUMPS_NUM] OF BOOL;	(*Нажата кнопка "Стоп насоса"?*)
	EmergencyPumpStopButtonPressed: ARRAY [1..MAX_K14_PUMPS_NUM] OF BOOL; (*Нажат аварийный стоп насоса?*)
	PumpState: ARRAY [1..MAX_K14_PUMPS_NUM] OF BOOL;	(*Работает насос?*)
	PressureDrop : BOOL;					(*Есть разница давлений?*)
END_VAR
VAR
	pumpStatusCheckDelay	: ARRAY [1..MAX_K14_PUMPS_NUM] OF TON;
END_VAR
VAR_TEMP
	i: USINT;
	pumpWorkOrder : ARRAY [1..MAX_K14_PUMPS_NUM] OF USINT;
	pumpStatusCheck : ARRAY [1..MAX_K14_PUMPS_NUM] OF BOOL;
END_VAR
(* @END_DECLARATION := '0' *)

(*Проверяем исправность насосов К14*)
FOR i := 1 TO MAX_K14_PUMPS_NUM DO
	pumpStatusCheckDelay[i](IN := PumpState[i], PT := PumpCheckDelayTime);
	pumpStatusCheck[i] := pumpStatusCheckDelay[i].Q;
END_FOR;

fK14PumpsFaultyControl(
	PumpState				:= PumpState,
	PumpStatusCheckDelay	:= pumpStatusCheck,
	PressureDrop			:= PressureDrop
);

(*Управление насосами К14*)
IF ManualMode THEN (*Ручной режим?*)
	FOR i := 1 TO MAX_K14_PUMPS_NUM DO
		fK14PumpManualControl(
			PumpID	:= i,
			TurnOn	:= TurnOnPumpButtonPressed[i],
			TurnOff	:= TurnOffPumpButtonPressed[i],
			State		:= PumpState[i],
			EmergencyStop := EmergencyPumpStopButtonPressed[i]
		);
	END_FOR;
ELSE
	IF WorkAllowed THEN	(*Работа разрешена?*)
		IF SummerMode THEN	(*Летний режим?*)
			pumpWorkOrder := PumpWorkSummerOrder;
		ELSE
			pumpWorkOrder := PumpWorkHeatingOrder;
		END_IF;

		FOR i := 1 TO MAX_K14_PUMPS_NUM DO
			(*
				работаем с насосами в порядке их приоритета
				Ищем первый исправный насос и включаем его
			*)
			IF NOT(K14PumpFaulty[pumpWorkOrder[i]]) THEN
				fK14PumpAutoControl(
						PumpID := pumpWorkOrder[i],
						EmergencyPumpStopButtonPressed := EmergencyPumpStopButtonPressed[pumpWorkOrder[i]]
				);
				RETURN;
			END_IF;
		END_FOR;
	ELSE
		RETURN;
	END_IF;
END_IF;
END_FUNCTION_BLOCK
